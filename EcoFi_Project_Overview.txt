EcoFi Green Bond Platform - Project Overview
===========================================

What is this project?
---------------------
EcoFi is a decentralized application (dApp) built on Ethereum using smart contracts. It allows users to invest in tokenized green bonds, track environmental impact, and release funds based on verified sustainability metrics. The platform uses blockchain to ensure transparency, security, and automation for green finance.

Key Features:
- Buy and manage green bond tokens (ERC20)
- Track real-time environmental impact (energy, CO2, etc.)
- Release funds to projects based on verified impact data
- All transactions and data are stored on the blockchain

How does it work?
-----------------
1. **Smart Contracts**: The backend uses Ethereum smart contracts for managing bonds, escrow, and impact data. Contracts are written in Solidity and deployed using Hardhat.
2. **Frontend (React)**: The user interface is built with React. It connects to the blockchain using ethers.js and displays real-time data from the contracts.
3. **Oracle**: A backend oracle script pushes verified impact data (like energy generated, CO2 reduced) to the blockchain, triggering fund releases.
4. **Local Blockchain**: For development, a local Ethereum node is run using Hardhat, simulating the blockchain environment.

Project Structure:
------------------
- `src/Backend/` - Smart contracts, deployment scripts, oracle scripts
- `src/` - React frontend, contract utilities, dashboard components
- `.env` files - Store contract addresses and keys

How to run this project (Step-by-Step):
---------------------------------------
1. **Install dependencies**
   - Open a terminal in `EcoFi_Citi_Blockchain`
   - Run: `npm install` (installs frontend and backend dependencies)

2. **Start Hardhat local blockchain**
   - Open a terminal in `src/Backend`
   - Run: `npx hardhat node --port 8545`

3. **Deploy smart contracts**
   - In the same terminal, run: `npx hardhat run --network localhost scripts/deployCombined.js`
   - This will deploy all contracts and update the `.env` files with addresses

4. **Fund the oracle updater wallet**
   - Run: `npm run oracle:fund` (in `src/Backend`)

5. **Push initial impact data (optional)**
   - Run: `node oracle/pushUpdate.js` (in `src/Backend`)

6. **Start the React frontend**
   - Open a terminal in `EcoFi_Citi_Blockchain`
   - Run: `npm start`
   - Open your browser to `http://localhost:3000`

7. **(Optional) Start the oracle data loop**
   - Run: `npm run oracle:loop` (in `src/Backend`) to simulate ongoing impact data

Troubleshooting:
----------------
- If you see errors about contract addresses, make sure `.env` files are updated after deployment.
- If the dashboard shows empty data, make sure the oracle has pushed impact data.
- Always start Hardhat node before deploying contracts or running the frontend.

Learning Resources:
-------------------
- [Ethereum Smart Contracts](https://ethereum.org/en/developers/docs/smart-contracts/)
- [Hardhat Documentation](https://hardhat.org/getting-started/)
- [React + ethers.js](https://docs.ethers.org/v6/getting-started/)
- [What is a Blockchain Oracle?](https://chain.link/education/blockchain-oracles)

Welcome to blockchain development! This project is a great way to learn how smart contracts, frontend apps, and oracles work together to build real-world decentralized applications.